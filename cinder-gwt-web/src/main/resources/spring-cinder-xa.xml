<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
	<bean id="propertyPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:mysql.properties</value>
				<value>classpath:app.properties</value>
			</list>
		</property>
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="ignoreUnresolvablePlaceholders" value="false" />
	</bean>

	<bean id="cinderDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="uniqueResourceName">
			<value>${cinder.unique.resource.name}</value>
		</property>

		<property name="xaDataSourceClassName">
			<value>${cinder.driverClassName}</value>
		</property>

		<property name="xaProperties">
			<props>
				<prop key="user">${cinder.user}</prop>
				<prop key="password">${cinder.password}</prop>
				<prop key="URL">
					${cinder.url}
				</prop>
			</props>
		</property>
		<property name="poolSize" value="3" />
		<property name="testQuery">
			<value>SELECT 1</value>
		</property>
	</bean>

	<bean id="cinderSf"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="cinderDataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.c3p0.min_size">${cinder.hibernate.c3p0.min_size}</prop>
				<prop key="hibernate.c3p0.max_size">${cinder.hibernate.c3p0.max_size}</prop>
				<prop key="hibernate.c3p0.timeout">${cinder.hibernate.c3p0.timeout}</prop>
				<prop key="hibernate.c3p0.max_statements">${cinder.hibernate.c3p0.max_statements}</prop>
				<prop key="hibernate.dialect">${cinder.hibernate.dialect}</prop>
				<prop key="hibernate.max_fetch_depth">${cinder.hibernate.max_fetch_depth}</prop>
				<prop key="hibernate.default_batch_fetch_size">${cinder.hibernate.default_batch_fetch_size}</prop>
				<prop key="hibernate.id.new_generator_mappings">${cinder.hibernate.id.new_generator_mappings}</prop>

				<prop key="hibernate.hbm2ddl.auto">${cinder.hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.current_session_context_class">${cinder.hibernate.current_session_context_class}
				</prop>
				<prop key="hibernate.transaction.factory_class">${cinder.hibernate.transaction.factory_class}</prop>
				<prop key="hibernate.transaction.manager_lookup_class">${cinder.hibernate.transaction.manager_lookup_class}
				</prop>
				<prop key="hibernate.show_sql">${cinder.hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${cinder.hibernate.format_sql}</prop>
			</props>

		</property>
		<property name="eventListeners">
			<map>
				<entry key="pre-insert">
					<list>
						<ref bean="entityHasTimeStampListener" />
						<ref bean="PasswordPersistenceEventListener" />
					</list>
				</entry>

				<entry key="pre-update">
					<list>
						<ref bean="PasswordPersistenceEventListener" />
					</list>
				</entry>
			</map>
		</property>
		<property name="packagesToScan">
			<list>
				<value>xdata.etl.cinder.shared.entity</value>
				<value>xdata.etl.cinder.hbasemeta.shared.entity</value>
				<!-- <value>xdata.etl.cinder.businessmeta.shared.entity</value> -->
				<value>xdata.etl.cinder.logmodelmeta.shared.entity</value>
				
			</list>
		</property>

	</bean>

	<bean class="xdata.etl.cinder.service.AuthorizeServiceImpl">
		<property name="debug">
			<value>${app.debug}</value>
		</property>
	</bean>

	<bean id="PasswordPersistenceEventListener"
		class="xdata.etl.cinder.common.hibernate.listener.PasswordPersistenceEventListener">
		<property name="passwordEncryptor" ref="SimplePasswordEncryptor"></property>
	</bean>

	<bean id="userTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp"
		init-method="init" destroy-method="shutdownForce">
		<constructor-arg>
			<props>
				<prop key="com.atomikos.icatch.service">
					com.atomikos.icatch.standalone.UserTransactionServiceFactory
				</prop>
			</props>
		</constructor-arg>
	</bean>

	<bean id="AtomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close" depends-on="userTransactionService">
		<property name="startupTransactionService" value="false" />
		<property name="forceShutdown" value="true" />
	</bean>

	<bean id="AtomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp"
		depends-on="userTransactionService">
		<property name="transactionTimeout" value="300" />
	</bean>

	<bean id="JtaTransactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager"
		depends-on="userTransactionService">
		<property name="transactionManager" ref="AtomikosTransactionManager" />
		<property name="userTransaction" ref="AtomikosUserTransaction" />
	</bean>

	<aop:aspectj-autoproxy />
	<context:annotation-config />
	<context:component-scan base-package="xdata.etl.cinder" />
	<tx:annotation-driven transaction-manager="JtaTransactionManager" />

</beans>
